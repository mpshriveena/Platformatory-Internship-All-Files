JSON Producer using Maven
A producer to produce the json data from a file to the topic using maven

1) Create a maven project
mvn archetype:generate -DgroupId=com.platformatory -DartifactId=json-producer -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false
cd json-producer [Folder where pom file is located]

2) Update the pom.xml file as follows
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.platformatory</groupId>
  <artifactId>json-producer</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>json-producer</name>
  <url>http://maven.apache.org</url>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka-clients</artifactId>
        <version>3.5.0</version>
    </dependency>
    <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>2.13.3</version>
    </dependency>
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>2.0.0</version>
    </dependency>
    <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>5.8.2</version>
        <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>com.platformatory.Main</mainClass>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>

3) Create a data.json file in the same directory as pom file and update the details.
[
    {"name": "Manikandan", "age": 53},
    {"name": "Pushparani", "age": 51},
    {"name": "Shri Veena", "age": 22},
    {"name": "Shri Vithish", "age": 14}
]

4) Update the App.java file as follows
package com.platformatory;

import org.apache.kafka.clients.producer.*;
import org.apache.kafka.common.serialization.StringSerializer;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.io.File;
import java.io.IOException;
import java.util.Properties;

class Person {
    private String name;
    private int age;
    public String getName() {
        return name;
    }
    public void setName(String name) {
        this.name = name;
    }
    public int getAge() {
        return age;
    }
    public void setAge(int age) {
        this.age = age;
    }
}

public class App {
    public static void main(String[] args) {
        Properties props = new Properties();
        props.put("bootstrap.servers", "localhost:9092");
        props.put("key.serializer", StringSerializer.class.getName());
        props.put("value.serializer", StringSerializer.class.getName());
        Producer<String, String> producer = new KafkaProducer<>(props);
        ObjectMapper objectMapper = new ObjectMapper();
        try {
            File jsonFile = new File("data.json");
            Person[] people = objectMapper.readValue(jsonFile, Person[].class);
            for (Person person : people) {
                String jsonString = objectMapper.writeValueAsString(person);
                ProducerRecord<String, String> record = new ProducerRecord<>("json-data", person.getName(), jsonString);
                producer.send(record);
            }
        System.out.println("Messages sent to topic successfully!");
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            producer.close();
        }
    }
}

5) Clean and compile the project
mvn clean install

6) Execute the project
mvn exec:java -Dexec.mainClass="com.platformatory.App"

